-- Lirabay UI v1.1 — Wind-style (Sidebar left) with neon-yellow accent
-- Features: Intro (glow), Sidebar tabs (Home, Visual, Scripts, Settings),
--           Main panel with rounded corners + faux shadow, Fade+Slide animations,
--           Reload button (loads from GitHub raw), mobile scaling
-- USAGE: Put this into a LocalScript and/or upload to GitHub raw, then load with game:HttpGet()

-- ========== CONFIG ==========
local RAW_URL = "https://raw.githubusercontent.com/<username>/<repo>/main/LirabayUI.lua"
-- Replace the RAW_URL above with your actual GitHub raw file link before using Reload

local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer
if not player then
    -- In rare cases LocalPlayer is not ready — wait until available
    player = Players.PlayerAdded:Wait()
end

-- Theme (neon yellow accent)
local THEME = {
    Background = Color3.fromRGB(20,20,20),
    Panel = Color3.fromRGB(15,15,15),
    Sidebar = Color3.fromRGB(30,30,30),
    Accent = Color3.fromRGB(255, 198, 50), -- neon yellow
    Text = Color3.fromRGB(240,240,240),
    Dim = Color3.fromRGB(0,0,0)
}

local UI_BASE_WIDTH = 760  -- base size for desktop scaling
local UI_BASE_HEIGHT = 420

local TWEEN_TIME = 0.28
local INTRO_TIME = 0.9
local MOBILE_BREAKPOINT = 720 -- if viewport width < this, scale down UI

-- Tabs list (order = sidebar order)
local TABS = {
    { id = "home", label = "Home", icon = "🏠" },
    { id = "visual", label = "Visual", icon = "🎨" },
    { id = "scripts", label = "Scripts", icon = "📜" },
    { id = "settings", label = "Settings", icon = "⚙️" },
}

-- ========== UTILITIES ==========
local function new(cls, props)
    local inst = Instance.new(cls)
    if props then
        for k,v in pairs(props) do
            if k == "Parent" then
                inst.Parent = v
            else
                inst[k] = v
            end
        end
    end
    return inst
end

local function tween(inst, props, info)
    local tweenInfo = info or TweenInfo.new(TWEEN_TIME, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
    local t = TweenService:Create(inst, tweenInfo, props)
    t:Play()
    return t
end

-- Ensure we don't create duplicate GUI if script runs twice
local existing = player:FindFirstChild("PlayerGui") and player.PlayerGui:FindFirstChild("LirabayUI")
if existing then
    existing:Destroy()
end

-- ========== BUILD GUI ==========
local screenGui = new("ScreenGui", { Name = "LirabayUI", ResetOnSpawn = false, Parent = player:WaitForChild("PlayerGui") })

-- Root container
local root = new("Frame", {
    Name = "Root",
    Size = UDim2.new(0, UI_BASE_WIDTH, 0, UI_BASE_HEIGHT),
    Position = UDim2.new(0.5, -UI_BASE_WIDTH/2, 0.5, -UI_BASE_HEIGHT/2),
    AnchorPoint = Vector2.new(0.5,0.5),
    BackgroundColor3 = THEME.Background,
    BorderSizePixel = 0,
    Parent = screenGui
})
new("UICorner", { CornerRadius = UDim.new(0, 16), Parent = root })

-- Fallback shadow (simulate drop shadow by duplicated frame behind)
local shadow = new("Frame", {
    Name = "Shadow",
    Size = UDim2.new(1, 12, 1, 12),
    Position = UDim2.new(0, 6, 0, 6),
    BackgroundColor3 = Color3.fromRGB(0,0,0),
    BorderSizePixel = 0,
    ZIndex = 1,
    Parent = root
})
shadow.BackgroundTransparency = 0.78
new("UICorner", { CornerRadius = UDim.new(0, 18), Parent = shadow })

-- Main panel (on top)
local panel = new("Frame", {
    Name = "Panel",
    Size = UDim2.new(1, 0, 1, 0),
    Position = UDim2.new(0, 0, 0, 0),
    BackgroundColor3 = THEME.Panel,
    BorderSizePixel = 0,
    ZIndex = 2,
    Parent = root
})
new("UICorner", { CornerRadius = UDim.new(0, 14), Parent = panel })

-- Left sidebar
local SIDEBAR_WIDTH = 92
local sidebar = new("Frame", {
    Name = "Sidebar",
    Size = UDim2.new(0, SIDEBAR_WIDTH, 1, 0),
    Position = UDim2.new(0, 0, 0, 0),
    BackgroundColor3 = THEME.Sidebar,
    BorderSizePixel = 0,
    Parent = panel
})
new("UICorner", { CornerRadius = UDim.new(0, 12), Parent = sidebar })

local sidebarLayout = new("UIListLayout", {
    Parent = sidebar,
    SortOrder = Enum.SortOrder.LayoutOrder,
    Padding = UDim.new(0, 10)
})

local topSpacing = new("Frame", { Size = UDim2.new(1,0,0,14), BackgroundTransparency = 1, Parent = sidebar })

-- Tab container inside sidebar
local tabButtons = {}

-- Right content area
local contentArea = new("Frame", {
    Name = "ContentArea",
    Size = UDim2.new(1, -SIDEBAR_WIDTH, 1, 0),
    Position = UDim2.new(0, SIDEBAR_WIDTH, 0, 0),
    BackgroundTransparency = 1,
    Parent = panel
})

-- Inner content panel (dark translucent with inner padding)
local innerPadding = 18
local contentPanel = new("Frame", {
    Name = "ContentPanel",
    Size = UDim2.new(1, -innerPadding*2, 1, -innerPadding*2),
    Position = UDim2.new(0, innerPadding, 0, innerPadding),
    BackgroundColor3 = Color3.fromRGB(8,8,8),
    BorderSizePixel = 0,
    Parent = contentArea
})
new("UICorner", { CornerRadius = UDim.new(0, 12), Parent = contentPanel })

-- Glow border to mimic neon rim (thin)
local glow = new("Frame", {
    Name = "AccentGlow",
    Size = UDim2.new(1, 8, 0, 6),
    Position = UDim2.new(0, innerPadding, 0, -6),
    BackgroundColor3 = THEME.Accent,
    BorderSizePixel = 0,
    Parent = contentArea
})
glow.BackgroundTransparency = 0.88
new("UICorner", { CornerRadius = UDim.new(0, 6), Parent = glow })

-- Pages folder
local pagesFolder = new("Folder", { Name = "Pages", Parent = contentPanel })

-- Title label
local titleLabel = new("TextLabel", {
    Name = "Title",
    Size = UDim2.new(1, -20, 0, 40),
    Position = UDim2.new(0, 10, 0, 8),
    BackgroundTransparency = 1,
    Text = "Lirabay UI",
    TextColor3 = THEME.Text,
    Font = Enum.Font.GothamBold,
    TextSize = 20,
    TextXAlignment = Enum.TextXAlignment.Left,
    Parent = contentPanel
})

-- Center placeholder content text (will change per page)
local function makePage(id, label)
    local p = new("Frame", {
        Name = id .. "_page",
        Size = UDim2.new(1, -20, 1, -64),
        Position = UDim2.new(0, 20, 0, 56),
        BackgroundTransparency = 1,
        Visible = false,
        Parent = pagesFolder
    })
    local txt = new("TextLabel", {
        Name = "MiddleText",
        Size = UDim2.new(1, -40, 0, 36),
        Position = UDim2.new(0, 20, 0, 20),
        BackgroundTransparency = 1,
        Text = ("Đây là trang %s"):format(label),
        TextColor3 = THEME.Text,
        Font = Enum.Font.Gotham,
        TextSize = 16,
        TextXAlignment = Enum.TextXAlignment.Center,
        TextYAlignment = Enum.TextYAlignment.Center,
        Parent = p
    })
    return p
end

-- Create tab buttons & pages
local selectedTabButton = nil
local pages = {}

for i,tabInfo in ipairs(TABS) do
    local container = new("Frame", {
        Name = tabInfo.id .. "_container",
        Size = UDim2.new(1, -16, 0, 56),
        BackgroundTransparency = 1,
        LayoutOrder = i,
        Parent = sidebar
    })
    local btn = new("TextButton", {
        Name = tabInfo.id .. "_btn",
        Size = UDim2.new(1, 0, 0, 44),
        Position = UDim2.new(0, 8, 0, 0),
        BackgroundColor3 = THEME.Sidebar,
        BorderSizePixel = 0,
        AutoButtonColor = false,
        Text = "",
        Parent = container
    })
    new("UICorner", { CornerRadius = UDim.new(0,10), Parent = btn })

    -- left small icon background
    local iconBg = new("Frame", {
        Name = "IconBg",
        Size = UDim2.new(0, 36, 0, 36),
        Position = UDim2.new(0, 6, 0.5, -18),
        BackgroundColor3 = Color3.fromRGB(40,40,40),
        Parent = btn
    })
    new("UICorner", { CornerRadius = UDim.new(0,8), Parent = iconBg })

    local iconLabel = new("TextLabel", {
        Name = "Icon",
        Size = UDim2.new(1,0,1,0),
        BackgroundTransparency = 1,
        Text = tabInfo.icon or "?",
        Font = Enum.Font.GothamBold,
        TextSize = 18,
        TextColor3 = THEME.Text,
        Parent = iconBg
    })

    local textLabel = new("TextLabel", {
        Name = "Label",
        Size = UDim2.new(1, -56, 1, 0),
        Position = UDim2.new(0, 52, 0, 0),
        BackgroundTransparency = 1,
        Text = tabInfo.label,
        Font = Enum.Font.Gotham,
        TextSize = 14,
        TextColor3 = THEME.Text,
        TextXAlignment = Enum.TextXAlignment.Left,
        Parent = btn
    })

    -- small active accent bar (hidden by default)
    local activeBar = new("Frame", {
        Name = "ActiveBar",
        Size = UDim2.new(0, 6, 0, 44),
        Position = UDim2.new(0, 0, 0, 0),
        BackgroundColor3 = THEME.Accent,
        BorderSizePixel = 0,
        Visible = false,
        Parent = btn
    })
    new("UICorner", { CornerRadius = UDim.new(0,6), Parent = activeBar })

    -- create page
    local page = makePage(tabInfo.id, tabInfo.label)
    pages[tabInfo.id] = page

    -- click behavior
    btn.Activated:Connect(function()
        -- deselect previous
        if selectedTabButton and selectedTabButton ~= btn then
            selectedTabButton.BackgroundColor3 = THEME.Sidebar
            local prevActive = selectedTabButton:FindFirstChild("ActiveBar")
            if prevActive then prevActive.Visible = false end
        end
        -- select current
        selectedTabButton = btn
        btn.BackgroundColor3 = Color3.fromRGB(40,40,40)
        local act = btn:FindFirstChild("ActiveBar")
        if act then act.Visible = true end

        -- animate pages: show this, hide others
        for id,pg in pairs(pages) do
            if pg == page then
                pg.Visible = true
                pg.Position = UDim2.new(1, 0, pg.Position.Y.Scale, pg.Position.Y.Offset) -- start off-right
                tween(pg, { Position = UDim2.new(0, 20, pg.Position.Y.Scale, pg.Position.Y.Offset) }, TweenInfo.new(TWEEN_TIME, Enum.EasingStyle.Quad, Enum.EasingDirection.Out))
                tween(pg, { BackgroundTransparency = 0 }, TweenInfo.new(TWEEN_TIME, Enum.EasingStyle.Quad, Enum.EasingDirection.Out))
            else
                if pg.Visible then
                    tween(pg, { Position = UDim2.new(-1, 0, pg.Position.Y.Scale, pg.Position.Y.Offset) }, TweenInfo.new(TWEEN_TIME, Enum.EasingStyle.Quad, Enum.EasingDirection.Out))
                    task.delay(TWEEN_TIME, function() pg.Visible = false end)
                end
            end
        end

        -- update title
        titleLabel.Text = "Lirabay UI — " .. tabInfo.label
    end)

    table.insert(tabButtons, btn)

    -- default select first tab
    if i == 1 then
        task.spawn(function()
            -- small delay to allow GUI to fully construct
            task.wait(0.03)
            btn:Activate()
        end)
    end
end

-- ========== Top Controls (right) ==========
-- Close & Minimize area
local controls = new("Frame", {
    Name = "Controls",
    Size = UDim2.new(0, 120, 0, 32),
    Position = UDim2.new(1, -132, 0, 12),
    BackgroundTransparency = 1,
    Parent = panel
})

local reloadBtn = new("TextButton", {
    Name = "ReloadBtn",
    Size = UDim2.new(0, 92, 0, 28),
    Position = UDim2.new(1, -132, 0, 2),
    BackgroundColor3 = THEME.Accent,
    Text = "Reload UI",
    TextColor3 = Color3.new(0,0,0),
    Font = Enum.Font.GothamBold,
    TextSize = 14,
    BorderSizePixel = 0,
    Parent = controls
})
new("UICorner", { CornerRadius = UDim.new(0,8), Parent = reloadBtn })

reloadBtn.Activated:Connect(function()
    -- reload from RAW_URL
    -- IMPORTANT: Replace RAW_URL with your actual link before using
    pcall(function()
        screenGui:Destroy()
        loadstring(game:HttpGet(RAW_URL))()
    end)
end)

local closeBtn = new("TextButton", {
    Name = "CloseBtn",
    Size = UDim2.new(0, 28, 0, 28),
    Position = UDim2.new(1, -34, 0, 2),
    BackgroundColor3 = Color3.fromRGB(40,40,40),
    Text = "✕",
    TextColor3 = THEME.Text,
    Font = Enum.Font.GothamBold,
    TextSize = 14,
    BorderSizePixel = 0,
    Parent = controls
})
new("UICorner", { CornerRadius = UDim.new(0,8), Parent = closeBtn })

local minimized = false
closeBtn.Activated:Connect(function()
    if minimized then
        panel.Visible = true
        minimized = false
    else
        panel.Visible = false
        minimized = true
    end
end)

-- ========== Intro Animation (centered overlay) ==========
local introOverlay = new("Frame", {
    Name = "IntroOverlay",
    Size = UDim2.new(1,0,1,0),
    Position = UDim2.new(0,0,0,0),
    BackgroundColor3 = THEME.Panel,
    ZIndex = 60,
    Parent = screenGui
})
local introCorner = new("UICorner", { CornerRadius = UDim.new(0,0), Parent = introOverlay })

-- Glow label
local introLabel = new("TextLabel", {
    Name = "IntroLabel",
    AnchorPoint = Vector2.new(0.5,0.5),
    Position = UDim2.new(0.5, 0.5, 0, -10),
    Size = UDim2.new(0, 10, 0, 30), -- start tiny
    BackgroundTransparency = 1,
    Text = "Lirabay",
    Font = Enum.Font.GothamBlack,
    TextSize = 42,
    TextColor3 = THEME.Accent,
    ZIndex = 61,
    Parent = introOverlay
})

-- neon glow effect: TextStroke + duplicate label with transparency
local stroke = new("UIStroke", { Parent = introLabel, Color = THEME.Accent, Thickness = 6, Transparency = 0.6 })
local outerGlow = new("TextLabel", {
    Name = "OuterGlow",
    AnchorPoint = introLabel.AnchorPoint,
    Position = introLabel.Position,
    Size = introLabel.Size,
    BackgroundTransparency = 1,
    Text = introLabel.Text,
    Font = introLabel.Font,
    TextSize = introLabel.TextSize,
    TextColor3 = THEME.Accent,
    ZIndex = 60,
    Parent = introOverlay
})
outerGlow.TextTransparency = 0.85

-- animate intro
task.spawn(function()
    tween(introLabel, { Size = UDim2.new(0, 280, 0, 58) }, TweenInfo.new(INTRO_TIME, Enum.EasingStyle.Back, Enum.EasingDirection.Out))
    tween(outerGlow, { Size = UDim2.new(0, 300, 0, 64) }, TweenInfo.new(INTRO_TIME, Enum.EasingStyle.Back, Enum.EasingDirection.Out))
    task.wait(INTRO_TIME + 0.15)
    tween(introOverlay, { BackgroundTransparency = 1 }, TweenInfo.new(0.45, Enum.EasingStyle.Quad, Enum.EasingDirection.Out))
    tween(introLabel, { TextTransparency = 1 }, TweenInfo.new(0.45))
    tween(outerGlow, { TextTransparency = 1 }, TweenInfo.new(0.45))
    task.wait(0.5)
    introOverlay:Destroy()
end)

-- ========== Responsiveness (scale for mobile) ==========
local function adjustScale()
    local size = workspace.CurrentCamera and workspace.CurrentCamera.ViewportSize or Vector2.new(1280,720)
    local w = size.X
    local h = size.Y

    if w < MOBILE_BREAKPOINT then
        -- mobile: smaller and full-width-ish
        local scale = math.clamp(w / 820, 0.6, 0.95)
        root.Size = UDim2.new(0, math.floor(UI_BASE_WIDTH * scale), 0, math.floor(UI_BASE_HEIGHT * scale))
        root.Position = UDim2.new(0.5, - (UI_BASE_WIDTH*scale)/2, 0.52, - (UI_BASE_HEIGHT*scale)/2)
    else
        root.Size = UDim2.new(0, UI_BASE_WIDTH, 0, UI_BASE_HEIGHT)
        root.Position = UDim2.new(0.5, -UI_BASE_WIDTH/2, 0.5, -UI_BASE_HEIGHT/2)
    end
end

if workspace.CurrentCamera then
    adjustScale()
    workspace.CurrentCamera:GetPropertyChangedSignal("ViewportSize"):Connect(adjustScale)
else
    RunService.RenderStepped:Wait()
    adjustScale()
end

-- ========== Helper: Add small sample content to Scripts page (textbox + run) ==========
do
    local scriptsPage = pages["scripts"]
    if scriptsPage then
        local box = new("TextBox", {
            Name = "ScriptBox",
            Size = UDim2.new(1, -60, 0, 140),
            Position = UDim2.new(0, 20, 0, 70),
            BackgroundColor3 = Color3.fromRGB(12,12,12),
            TextColor3 = THEME.Text,
            Text = "-- Viết script của bạn ở đây\nprint('Hello Lirabay')",
            Font = Enum.Font.Code,
            TextSize = 14,
            ClearTextOnFocus = false,
            MultiLine = true,
            Parent = scriptsPage
        })
        new("UICorner", { CornerRadius = UDim.new(0,8), Parent = box })

        local runBtn = new("TextButton", {
            Name = "RunBtn",
            Size = UDim2.new(0, 120, 0, 34),
            Position = UDim2.new(1, -140, 1, -54),
            AnchorPoint = Vector2.new(0,0),
            BackgroundColor3 = THEME.Accent,
            Text = "Run Script",
            TextColor3 = Color3.fromRGB(0,0,0),
            Font = Enum.Font.GothamBold,
            TextSize = 14,
            Parent = scriptsPage
        })
        new("UICorner", { CornerRadius = UDim.new(0,8), Parent = runBtn })

        runBtn.Activated:Connect(function()
            local code = box.Text
            -- try to run code safely
            local ok, f = pcall(function() return loadstring(code) end)
            if ok and type(f) == "function" then
                pcall(f)
            else
                -- show small error (temporary)
                local err = Instance.new("TextLabel")
                err.Size = UDim2.new(0, 260, 0, 40)
                err.Position = UDim2.new(0.5, -130, 1, -100)
                err.BackgroundColor3 = Color3.fromRGB(30,30,30)
                err.TextColor3 = Color3.fromRGB(255,150,150)
                err.Text = "Lỗi: không thể load script"
                err.Font = Enum.Font.GothamBold
                err.TextSize = 14
                err.Parent = scriptsPage
                new("UICorner", { CornerRadius = UDim.new(0,8), Parent = err })
                task.delay(2, function() pcall(function() err:Destroy() end) end)
            end
        end)
    end
end

-- ========== Finishing touches ==========
-- Slight entrance animation for whole UI
root.Position = UDim2.new(0.5, -UI_BASE_WIDTH/2, 0.35, -UI_BASE_HEIGHT/2)
root.BackgroundTransparency = 1
tween(root, { BackgroundTransparency = 0 }, TweenInfo.new(0.35))
tween(root, { Position = UDim2.new(0.5, -UI_BASE_WIDTH/2, 0.5, -UI_BASE_HEIGHT/2) }, TweenInfo.new(0.42, Enum.EasingStyle.Back, Enum.EasingDirection.Out))

print("[Lirabay UI] Loaded — Accent: neon yellow. Replace RAW_URL with your raw GitHub link for Reload.")
