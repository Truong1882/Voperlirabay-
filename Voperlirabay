-- Test7 Pro Executor (Full feature)
-- Copy -> Paste vào executor (Delta...) -> Execute

-- ====== Helpers for compatibility with different executors ======
local has_writefile = type(writefile) == "function"
local has_readfile = type(readfile) == "function"
local has_isfile = type(isfile) == "function"
local has_makefolder = type(makefolder) == "function"
local http_get = (function()
    if type(game.HttpGet) == "function" then return function(url) return game:HttpGet(url) end end
    if type(game.HttpGetAsync) == "function" then return function(url) return game:HttpGetAsync(url) end end
    if type(HttpGet) == "function" then return function(url) return HttpGet(url) end end
    if type(syn) == "table" and syn.request then return function(url)
        local r = syn.request({Url = url, Method = "GET"})
        return r.Body
    end end
    return nil
end)()

local function try_write(path, content)
    if has_writefile then
        pcall(function() writefile(path, content) end)
        return true
    end
    return false
end

local function try_read(path)
    if has_readfile and has_isfile and isfile(path) then
        local ok, res = pcall(function() return readfile(path) end)
        if ok then return res end
    end
    return nil
end

-- folder for saved scripts
local folder = "Test7Scripts"
if has_makefolder then
    pcall(function() makefolder(folder) end)
end

-- ====== Build UI ======
local CoreGui = game:GetService("CoreGui")
local UserInputService = game:GetService("UserInputService")

-- prevent duplicate
if CoreGui:FindFirstChild("Test7ExecutorPro") then
    CoreGui.Test7ExecutorPro:Destroy()
end

local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "Test7ExecutorPro"
ScreenGui.Parent = CoreGui
ScreenGui.ResetOnSpawn = false

local Frame = Instance.new("Frame")
Frame.Parent = ScreenGui
Frame.Size = UDim2.new(0, 560, 0, 380)
Frame.Position = UDim2.new(0.25, 0, 0.2, 0)
Frame.BackgroundColor3 = Color3.fromRGB(30,30,30)
Frame.BorderSizePixel = 0
Frame.Active = true
Frame.Draggable = true
Frame.ZIndex = 5
Frame.ClipsDescendants = true

-- Titlebar
local TitleBar = Instance.new("Frame")
TitleBar.Parent = Frame
TitleBar.Size = UDim2.new(1,0,0,36)
TitleBar.BackgroundColor3 = Color3.fromRGB(45,45,45)
TitleBar.BorderSizePixel = 0
TitleBar.ZIndex = 6

local TitleLabel = Instance.new("TextLabel")
TitleLabel.Parent = TitleBar
TitleLabel.Size = UDim2.new(1, -80, 1, 0)
TitleLabel.Position = UDim2.new(0, 8, 0, 0)
TitleLabel.Text = "Test7 Pro Script Executor"
TitleLabel.TextColor3 = Color3.fromRGB(240,240,240)
TitleLabel.BackgroundTransparency = 1
TitleLabel.Font = Enum.Font.SourceSansBold
TitleLabel.TextSize = 18
TitleLabel.TextXAlignment = Enum.TextXAlignment.Left
TitleLabel.ZIndex = 7

local MinimizeBtn = Instance.new("TextButton")
MinimizeBtn.Parent = TitleBar
MinimizeBtn.Size = UDim2.new(0,36,0,36)
MinimizeBtn.Position = UDim2.new(1, -72, 0, 0)
MinimizeBtn.Text = "_"
MinimizeBtn.Font = Enum.Font.SourceSansBold
MinimizeBtn.TextSize = 18
MinimizeBtn.BackgroundColor3 = Color3.fromRGB(70,70,70)
MinimizeBtn.TextColor3 = Color3.fromRGB(255,255,255)
MinimizeBtn.ZIndex = 7

local CloseBtn = Instance.new("TextButton")
CloseBtn.Parent = TitleBar
CloseBtn.Size = UDim2.new(0,36,0,36)
CloseBtn.Position = UDim2.new(1, -36, 0, 0)
CloseBtn.Text = "X"
CloseBtn.Font = Enum.Font.SourceSansBold
CloseBtn.TextSize = 18
CloseBtn.BackgroundColor3 = Color3.fromRGB(100,40,40)
CloseBtn.TextColor3 = Color3.fromRGB(255,255,255)
CloseBtn.ZIndex = 7

-- Left sidebar (scripts list)
local Side = Instance.new("Frame")
Side.Parent = Frame
Side.Size = UDim2.new(0,160,1,-36)
Side.Position = UDim2.new(0,0,0,36)
Side.BackgroundColor3 = Color3.fromRGB(35,35,35)
Side.BorderSizePixel = 0
Side.ZIndex = 5

local SideTitle = Instance.new("TextLabel")
SideTitle.Parent = Side
SideTitle.Size = UDim2.new(1,0,0,28)
SideTitle.Position = UDim2.new(0,0,0,6)
SideTitle.BackgroundTransparency = 1
SideTitle.Text = "Scripts"
SideTitle.TextColor3 = Color3.fromRGB(220,220,220)
SideTitle.Font = Enum.Font.SourceSansSemibold
SideTitle.TextSize = 16
SideTitle.ZIndex = 6

local ScriptsList = Instance.new("ScrollingFrame")
ScriptsList.Parent = Side
ScriptsList.Size = UDim2.new(1,-12,1,-44)
ScriptsList.Position = UDim2.new(0,6,0,34)
ScriptsList.BackgroundTransparency = 1
ScriptsList.CanvasSize = UDim2.new(0,0,0,0)
ScriptsList.ScrollBarThickness = 6
ScriptsList.ZIndex = 6

local UIListLayout = Instance.new("UIListLayout")
UIListLayout.Parent = ScriptsList
UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout.Padding = UDim.new(0,6)

-- Main editor area
local EditorFrame = Instance.new("Frame")
EditorFrame.Parent = Frame
EditorFrame.Size = UDim2.new(1, -170, 1, -36)
EditorFrame.Position = UDim2.new(0,170,0,36)
EditorFrame.BackgroundColor3 = Color3.fromRGB(28,28,28)
EditorFrame.BorderSizePixel = 0
EditorFrame.ZIndex = 5

local TextBox = Instance.new("TextBox")
TextBox.Parent = EditorFrame
TextBox.Size = UDim2.new(1,-20,0.72,-20)
TextBox.Position = UDim2.new(0,10,0,10)
TextBox.BackgroundColor3 = Color3.fromRGB(12,12,12)
TextBox.TextColor3 = Color3.fromRGB(230,230,230)
TextBox.Font = Enum.Font.Code
TextBox.TextSize = 15
TextBox.MultiLine = true
TextBox.TextWrapped = true
TextBox.ClearTextOnFocus = false
TextBox.Text = "-- Paste script here or a raw URL to import then press Run Raw\n"

-- Buttons row
local BtnY = 0.76
local BtnW = 110
local BtnH = 36
local Gap = 10
local startX = 10

local ExecuteBtn = Instance.new("TextButton")
ExecuteBtn.Parent = EditorFrame
ExecuteBtn.Size = UDim2.new(0,BtnW,0,BtnH)
ExecuteBtn.Position = UDim2.new(0, startX, BtnY, 0)
ExecuteBtn.Text = "Execute"
ExecuteBtn.Font = Enum.Font.SourceSansBold
ExecuteBtn.TextSize = 16
ExecuteBtn.BackgroundColor3 = Color3.fromRGB(60,140,60)
ExecuteBtn.TextColor3 = Color3.fromRGB(255,255,255)
ExecuteBtn.ZIndex = 7

local ClearBtn = Instance.new("TextButton")
ClearBtn.Parent = EditorFrame
ClearBtn.Size = UDim2.new(0,BtnW,0,BtnH)
ClearBtn.Position = UDim2.new(0, startX + (BtnW+Gap)*1, BtnY, 0)
ClearBtn.Text = "Clear"
ClearBtn.Font = Enum.Font.SourceSansBold
ClearBtn.TextSize = 16
ClearBtn.BackgroundColor3 = Color3.fromRGB(150,60,60)
ClearBtn.TextColor3 = Color3.fromRGB(255,255,255)
ClearBtn.ZIndex = 7

local RunRawBtn = Instance.new("TextButton")
RunRawBtn.Parent = EditorFrame
RunRawBtn.Size = UDim2.new(0,BtnW,0,BtnH)
RunRawBtn.Position = UDim2.new(0, startX + (BtnW+Gap)*2, BtnY, 0)
RunRawBtn.Text = "Run Raw"
RunRawBtn.Font = Enum.Font.SourceSansBold
RunRawBtn.TextSize = 16
RunRawBtn.BackgroundColor3 = Color3.fromRGB(70,70,140)
RunRawBtn.TextColor3 = Color3.fromRGB(255,255,255)
RunRawBtn.ZIndex = 7

local SaveBtn = Instance.new("TextButton")
SaveBtn.Parent = EditorFrame
SaveBtn.Size = UDim2.new(0,BtnW,0,BtnH)
SaveBtn.Position = UDim2.new(0, startX + (BtnW+Gap)*3, BtnY, 0)
SaveBtn.Text = "Save"
SaveBtn.Font = Enum.Font.SourceSansBold
SaveBtn.TextSize = 16
SaveBtn.BackgroundColor3 = Color3.fromRGB(110,110,60)
SaveBtn.TextColor3 = Color3.fromRGB(255,255,255)
SaveBtn.ZIndex = 7

local LoadBtn = Instance.new("TextButton")
LoadBtn.Parent = EditorFrame
LoadBtn.Size = UDim2.new(0,BtnW,0,BtnH)
LoadBtn.Position = UDim2.new(0, startX + (BtnW+Gap)*4, BtnY, 0)
LoadBtn.Text = "Load"
LoadBtn.Font = Enum.Font.SourceSansBold
LoadBtn.TextSize = 16
LoadBtn.BackgroundColor3 = Color3.fromRGB(70,70,70)
LoadBtn.TextColor3 = Color3.fromRGB(255,255,255)
LoadBtn.ZIndex = 7

-- Status bar
local status = Instance.new("TextLabel")
status.Parent = EditorFrame
status.Size = UDim2.new(1,-20,0,20)
status.Position = UDim2.new(0,10,1,-26)
status.BackgroundTransparency = 1
status.Text = "Ready"
status.TextColor3 = Color3.fromRGB(180,180,180)
status.Font = Enum.Font.SourceSans
status.TextSize = 14
status.TextXAlignment = Enum.TextXAlignment.Left
status.ZIndex = 7

-- Utility: add script button to list
local function addScriptItem(name, content)
    local btn = Instance.new("TextButton")
    btn.Parent = ScriptsList
    btn.Size = UDim2.new(1,0,0,36)
    btn.Text = name
    btn.Font = Enum.Font.SourceSans
    btn.TextSize = 14
    btn.TextColor3 = Color3.fromRGB(240,240,240)
    btn.BackgroundColor3 = Color3.fromRGB(50,50,50)
    btn.ZIndex = 6
    btn.AutoButtonColor = true

    btn.MouseButton1Click:Connect(function()
        TextBox.Text = content
        status.Text = "Loaded script: "..name
    end)
end

-- Add sample scripts
addScriptItem("Fly (sample)", [[
-- Simple Fly (sample) - may require exploit support
local plr = game.Players.LocalPlayer
local char = plr.Character or plr.CharacterAdded:Wait()
local hrp = char:WaitForChild("HumanoidRootPart")
local flying = true
local speed = 50
local bodyvel = Instance.new("BodyVelocity", hrp)
bodyvel.MaxForce = Vector3.new(1e5,1e5,1e5)
game:GetService("RunService").Heartbeat:Connect(function()
    if flying then
        local cam = workspace.CurrentCamera
        local dir = (cam.CFrame.LookVector + Vector3.new(0,0,0)).Unit
        bodyvel.Velocity = dir * speed
    else
        bodyvel.Velocity = Vector3.new(0,0,0)
    end
end)
]])

addScriptItem("ESP (sample)", [[
-- Basic ESP (client-side)
for i,v in pairs(game.Players:GetPlayers()) do
    if v ~= game.Players.LocalPlayer then
        local bill = Instance.new("BillboardGui", v.Character and v.Character:FindFirstChild("Head") or nil)
        if bill then
            bill.Size = UDim2.new(0,100,0,30)
            bill.AlwaysOnTop = true
            local lbl = Instance.new("TextLabel", bill)
            lbl.Size = UDim2.new(1,1,1,1)
            lbl.BackgroundTransparency = 1
            lbl.Text = v.Name
            lbl.TextColor3 = Color3.new(1,0,0)
        end
    end
end
]])

addScriptItem("AutoFarm (placeholder)", [[
-- AutoFarm placeholder
print("AutoFarm: bạn cần chỉnh theo game cụ thể.")
]])

-- adjust ScrollCanvas after adding
ScriptsList.CanvasSize = UDim2.new(0,0,0, UIListLayout.AbsoluteContentSize + 10)
UIListLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
    ScriptsList.CanvasSize = UDim2.new(0,0, UIListLayout.AbsoluteContentSize + 12, 0)
end)

-- ====== Button functions ======
local function setStatus(txt)
    status.Text = txt
end

ExecuteBtn.MouseButton1Click:Connect(function()
    local code = TextBox.Text or ""
    setStatus("Executing...")
    local ok, err = pcall(function()
        local fn = loadstring and loadstring(code) or load and load(code)
        if fn then
            fn()
        else
            error("loadstring not available")
        end
    end)
    if not ok then
        setStatus("Error: " .. tostring(err))
        warn("Execute error:", err)
    else
        setStatus("Execution finished.")
    end
end)

ClearBtn.MouseButton1Click:Connect(function()
    TextBox.Text = ""
    setStatus("Cleared editor.")
end)

RunRawBtn.MouseButton1Click:Connect(function()
    local url = TextBox.Text and TextBox.Text:match("%S+")
    if not url or (not url:match("^https?://")) then
        setStatus("Please paste a valid raw URL in the editor.")
        return
    end
    if not http_get then
        setStatus("HttpGet not available on this executor.")
        return
    end
    setStatus("Fetching raw script...")
    local ok, res = pcall(function() return http_get(url) end)
    if not ok or not res then
        setStatus("Failed to fetch raw script.")
        return
    end
    setStatus("Running fetched script...")
    local ok2, err2 = pcall(function()
        local fn = loadstring and loadstring(res) or load and load(res)
        if fn then fn() else error("loadstring missing") end
    end)
    if not ok2 then
        setStatus("Runtime error: "..tostring(err2))
        warn("RunRaw error:", err2)
    else
        setStatus("RunRaw finished.")
    end
end)

SaveBtn.MouseButton1Click:Connect(function()
    local content = TextBox.Text or ""
    if content == "" then
        setStatus("Editor empty, nothing to save.")
        return
    end
    if not has_writefile then
        setStatus("Save not supported by this executor.")
        return
    end
    local filename = "script_"..tostring(os.time())..".txt"
    local path = folder.."/"..filename
    local ok, err = pcall(function() writefile(path, content) end)
    if ok then
        setStatus("Saved to "..path)
        -- add to list
        addScriptItem(filename, content)
    else
        setStatus("Save failed: "..tostring(err))
    end
end)

LoadBtn.MouseButton1Click:Connect(function()
    if not has_readfile or not has_isfile then
        setStatus("Load not supported by this executor.")
        return
    end
    -- try read most recent file
    setStatus("Loading saved scripts from folder...")
    local ok, files = pcall(function()
        -- syn or exploit may not provide listfiles; fallback not available
        if type(listfiles) == "function" then
            return listfiles(folder)
        else
            error("listfiles not available")
        end
    end)
    if not ok then
        setStatus("Cannot list saved files on this executor.")
        return
    end
    -- try show first file
    if #files == 0 then
        setStatus("No saved scripts found.")
        return
    end
    local p = files[1]
    local content = try_read(p)
    if content then
        TextBox.Text = content
        setStatus("Loaded "..p)
    else
        setStatus("Failed to read "..tostring(p))
    end
end)

-- Titlebar buttons
CloseBtn.MouseButton1Click:Connect(function()
    ScreenGui:Destroy()
end)

local minimized = false
MinimizeBtn.MouseButton1Click:Connect(function()
    minimized = not minimized
    if minimized then
        -- hide editor area, leave title and side
        EditorFrame.Visible = false
        Frame.Size = UDim2.new(0, 300, 0, 80)
        Frame.Position = UDim2.new(0.4,0,0.4,0)
        setStatus("Minimized")
    else
        EditorFrame.Visible = true
        Frame.Size = UDim2.new(0,560,0,380)
        Frame.Position = UDim2.new(0.25, 0, 0.2, 0)
        setStatus("Restored")
    end
end)

-- Toggle UI with RightShift
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    if input.KeyCode == Enum.KeyCode.RightShift then
        ScreenGui.Enabled = not ScreenGui.Enabled
    end
end)

-- Final status
setStatus("Test7 Pro ready. RightShift toggles UI. Use Run Raw to load raw URLs.")

-- End of Test7 Pro
